{"version":3,"file":"static/js/929.83d80138.chunk.js","mappings":"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","sources":["api/movieApi.js","components/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","hooks/useSearchMovie.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ecd9849b82b3a3428e824ce2103543f4';\n\nexport const fetchByTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n};\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      <h2>Loading...</h2>\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst StyledMoviesListItem = styled.li`\n  width: 298px;\n  overflow: hidden;\n  border-radius: 2px;\n  background-color: rgba(215, 231, 233, 0.9);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst StyledImageWrapper = styled.div`\n  height: 447px;\n  overflow: hidden;\n`;\n\nconst StyledCardImg = styled.img`\n  width: 100%;\n`;\n\nconst StyledMovieTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;\nexport {\n  StyledMoviesListItem,\n  StyledMovieTitle,\n  StyledImageWrapper,\n  StyledCardImg,\n};\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { routes } from '../../routes';\nimport {\n  StyledMoviesListItem,\n  StyledMovieTitle,\n  StyledImageWrapper,\n  StyledCardImg,\n} from './MovieCard.styled';\n\nconst MovieCard = ({ title, id, poster_path }) => {\n  const location = useLocation();\n  const currentPage =\n    location.pathname === routes.HOME ? routes.MOVIES : location.pathname;\n\n  return (\n    <StyledMoviesListItem>\n      <NavLink to={`${currentPage}/${id}`} state={{ from: location }}>\n        <StyledImageWrapper>\n          <StyledCardImg\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : `https://picsum.photos/600/900?image=109`\n            }\n            alt={title}\n          />\n        </StyledImageWrapper>\n\n        <StyledMovieTitle>{title}</StyledMovieTitle>\n      </NavLink>\n    </StyledMoviesListItem>\n  );\n};\n\nexport default MovieCard;\n","import styled from 'styled-components';\n\nconst StyledMoviesList = styled.ul`\n  list-style: none;\n  display: flex;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-top: 20px;\n  padding: 0px 20px;\n  justify-content: center;\n`;\n\nexport { StyledMoviesList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../MovieCard/MovieCard';\nimport { StyledMoviesList } from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <StyledMoviesList>\n      {movies &&\n        movies.map(movie => <MovieCard key={movie.id} {...movie}></MovieCard>)}\n    </StyledMoviesList>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  max-width: 1200px;\n  margin: 0px auto;\n`;\n","import React from 'react';\nimport { StyledSection } from './Section.styled';\n\nconst Section = ({ children }) => {\n  return <StyledSection> {children}</StyledSection>;\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  padding-top: 30px;\n  padding-bottom: 20px;\n`;\n\nconst StyledInput = styled.input`\n  outline: none;\n  padding: 10px 20px;\n  margin-right: 3px;\n  border: none;\n  background-color: rgba(208, 224, 226, 0.9);\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n\nconst StyledSearchBtn = styled.button`\n  padding: 9px 20px;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  background-color: rgba(208, 224, 226, 0.9);\n  cursor: pointer;\n  color: #464040;\n  font-weight: 600;\n`;\n\nexport { StyledForm, StyledInput, StyledSearchBtn };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledForm, StyledInput, StyledSearchBtn } from './Form.styled';\n\nconst Form = ({ onSubmit }) => {\n  const [query, setQuery] = useState(' ');\n\n  const handleChange = e => {\n    // setQuery(e.target);\n    const { value } = e.target;\n    setQuery(value.trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledInput\n        type=\"text\"\n        onChange={handleChange}\n        value={query}\n        placeholder=\"Search a movie\"\n      />\n      <StyledSearchBtn>Search</StyledSearchBtn>\n    </StyledForm>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../api/movieApi';\n\nconst UseSearchMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [queryS, setQueryS] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [empty, setEmpty] = useState(false);\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) return;\n    const getMovies = async () => {\n      setLoading(true);\n      try {\n        const response = await API.fetchByName(query);\n        // console.log('res', response);\n        if (response.results.length === 0) {\n          setEmpty(true);\n          return;\n        }\n        setMovies(response.results);\n        setSuccess(true);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [query, empty]);\n\n  const handleSubmit = value => {\n    setQueryS(value);\n    setSearchParams({ query: value });\n    setEmpty(false);\n    setMovies([]);\n  };\n\n  if (!movies) return;\n  return { movies, loading, success, empty, handleSubmit, queryS };\n};\n\nexport default UseSearchMovie;\n","import styled from 'styled-components';\n\nconst StyledMovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledMoviesSearchTitle = styled.h2`\n  text-align: center;\n  color: #464040;\n`;\n\nexport { StyledMovieWrapper, StyledMoviesSearchTitle };\n","import React from 'react';\nimport Section from '../../components/Section/Section';\nimport MovieList from '../../components/MovieList/MovieList';\nimport Form from '../../components/Form/Form';\nimport UseSearchMovie from '../../hooks/useSearchMovie';\nimport Loader from 'components/Loader';\nimport { StyledMoviesSearchTitle } from './Movies.styled';\n\nconst Movies = () => {\n  const { movies, loading, success, empty, handleSubmit } = UseSearchMovie();\n  // console.log(empty);\n  return (\n    <Section>\n      <>\n        <Form onSubmit={handleSubmit} />\n        {loading && <Loader />}\n        {empty && (\n          <StyledMoviesSearchTitle>\n            Movies do not found...Sorry(\n          </StyledMoviesSearchTitle>\n        )}\n        {success && <MovieList movies={movies}>Movies</MovieList>}\n      </>\n    </Section>\n  );\n};\n\nexport default Movies;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["API_KEY","fetchByTrending","axios","response","data","fetchById","id","fetchByActors","fetchByReviews","fetchByName","query","style","display","justifyContent","StyledMoviesListItem","styled","StyledImageWrapper","StyledCardImg","StyledMovieTitle","title","poster_path","location","useLocation","currentPage","pathname","routes","to","state","from","src","alt","StyledMoviesList","movies","map","movie","StyledSection","children","StyledForm","StyledInput","StyledSearchBtn","onSubmit","useState","setQuery","e","preventDefault","type","onChange","value","target","trim","placeholder","setMovies","queryS","setQueryS","loading","setLoading","success","setSuccess","useSearchParams","searchParams","setSearchParams","empty","setEmpty","get","useEffect","getMovies","API","results","length","console","error","handleSubmit","StyledMoviesSearchTitle","UseSearchMovie","Section","Loader","MovieList","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}