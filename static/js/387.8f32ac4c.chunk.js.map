{"version":3,"file":"static/js/387.8f32ac4c.chunk.js","mappings":"kTACMA,EAAU,mCAEHC,EAAe,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,kEACsCF,IAFhC,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOfC,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBAC+BN,EAD/B,oBADA,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAa,mCAAG,WAAMD,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BACuCN,EADvC,oBADI,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAc,mCAAG,WAAMF,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BACuCN,EADvC,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCACgEU,EADhE,oDADE,cACnBP,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,wJC7BlBO,E,QAAgBC,GAAAA,EAAH,+D,SCmCnB,EA/BgB,WACd,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACCC,EAAAA,GAAmBP,EAAOQ,SAD3B,OACXC,EADW,OAEjBC,QAAQC,IAAIF,GACZL,EAAWK,EAAIG,SAHE,2CAAH,qDAKhBN,GACD,GAAE,CAACN,EAAOQ,WAGT,wBACGL,EAAQU,OACPV,EAAQW,KAAI,SAAAC,GAAM,OAChB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOtB,GADA,KAOlB,SAACK,EAAD,gEAMP,C","sources":["api/movieApi.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = 'ecd9849b82b3a3428e824ce2103543f4';\n\nexport const fetchByTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nconst StyledMessage = styled.p`\n  color: tomato;\n  font-weight: 600;\n`;\n\nexport { StyledMessage };\n","import React, { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../api/movieApi';\nimport { StyledMessage } from './Reviews.styled';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const res = await API.fetchByReviews(params.movieID);\n      console.log(res);\n      setReviews(res.results);\n    };\n    getReviews();\n  }, [params.movieID]);\n\n  return (\n    <ul>\n      {reviews.length ? (\n        reviews.map(review => (\n          <li key={review.id}>\n            <h2>Author: {review.author}</h2>\n            <p>{review.content}</p>\n          </li>\n        ))\n      ) : (\n        <StyledMessage>\n          We don't have any reviews for this movie, sorry.\n        </StyledMessage>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","fetchByTrending","axios","response","data","fetchById","id","fetchByActors","fetchByReviews","fetchByName","query","StyledMessage","styled","params","useParams","useState","reviews","setReviews","useEffect","getReviews","API","movieID","res","console","log","results","length","map","review","author","content"],"sourceRoot":""}