{"version":3,"file":"static/js/736.afddaf28.chunk.js","mappings":"kTACMA,EAAU,mCAEHC,EAAe,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,kEACsCF,IAFhC,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qDAOfC,EAAS,mCAAG,WAAMC,GAAN,uFACAJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,oBAC+BN,EAD/B,oBADA,cACjBG,EADiB,yBAIhBA,EAASC,MAJO,2CAAH,sDAOTG,EAAa,mCAAG,WAAMD,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BACuCN,EADvC,oBADI,cACrBG,EADqB,yBAIpBA,EAASC,MAJW,2CAAH,sDAObI,EAAc,mCAAG,WAAMF,GAAN,uFACLJ,EAAAA,EAAAA,IAAA,6CACiBI,EADjB,4BACuCN,EADvC,oBADK,cACtBG,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAW,mCAAG,WAAMC,GAAN,uFACFR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCACgEU,EADhE,oDADE,cACnBP,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,qD,4KC7BlBO,EAAqBC,EAAAA,GAAAA,GAAH,yJASlBC,EAAiBD,EAAAA,GAAAA,GAAH,mMAOdE,EAAgBF,EAAAA,GAAAA,IAAH,8DAKbG,EAAoBH,EAAAA,GAAAA,IAAH,wGAMjBI,EAAkBJ,EAAAA,GAAAA,GAAH,sGAOfK,EAAiBL,EAAAA,GAAAA,EAAH,sJ,SCgBpB,EAvCa,WACX,IAAMM,GAASC,EAAAA,EAAAA,MACf,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGACIC,EAAAA,EAAkBP,EAAOQ,SAD7B,OACRC,EADQ,OAEdC,QAAQC,IAAI,aAAcF,GAC1BL,EAAQK,EAAIN,MAHE,2CAAH,qDAKbG,GACD,GAAE,CAACN,EAAOQ,WAGT,0BACE,SAACf,EAAD,UACGU,EAAKS,KAAI,SAAAC,GACR,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cAD5C,yCAIFC,IAAKH,EAAKI,QAEZ,UAACpB,EAAD,YACE,SAACC,EAAD,UAAkBe,EAAKI,QACvB,SAAClB,EAAD,UAAiBc,EAAKK,iBAXLL,EAAKzB,GAe7B,OAIR,C","sources":["api/movieApi.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '91c8072381313442ec35041820d8f199';\n\nexport const fetchByTrending = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const fetchById = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByActors = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByReviews = async id => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchByName = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false&include_adult=false`\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nconst StyledICastGallery = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  /* justify-content: center; */\n  gap: 10px;\n  padding: 30px 0px;\n`;\n\nconst StyledCastItem = styled.li`\n  width: 150px;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst StyledCastImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nconst StyledCastWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst StyledCastTitle = styled.h3`\n  text-align: center;\n  margin: 0;\n  font-weight: 700;\n  font-size: 20px;\n`;\n\nconst StyledCastText = styled.p`\n  text-align: center;\n  color: #000;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 2;\n  letter-spacing: 0.06em;\n`;\n\nexport {\n  StyledICastGallery,\n  StyledCastItem,\n  StyledCastImg,\n  StyledCastTitle,\n  StyledCastText,\n  StyledCastWrapper,\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../api/movieApi';\nimport {\n  StyledICastGallery,\n  StyledCastItem,\n  StyledCastImg,\n  StyledCastTitle,\n  StyledCastText,\n  StyledCastWrapper,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const params = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const res = await API.fetchByActors(params.movieID);\n      console.log('res_actors', res);\n      setCast(res.cast);\n    };\n    getCast();\n  }, [params.movieID]);\n\n  return (\n    <div>\n      <StyledICastGallery>\n        {cast.map(item => {\n          return (\n            <StyledCastItem key={item.id}>\n              <StyledCastImg\n                src={\n                  item.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${item.profile_path}`\n                    : `https://picsum.photos/600/900?image=91`\n                }\n                alt={item.name}\n              />\n              <StyledCastWrapper>\n                <StyledCastTitle>{item.name}</StyledCastTitle>\n                <StyledCastText>{item.character}</StyledCastText>\n              </StyledCastWrapper>\n            </StyledCastItem>\n          );\n        })}\n      </StyledICastGallery>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","fetchByTrending","axios","response","data","fetchById","id","fetchByActors","fetchByReviews","fetchByName","query","StyledICastGallery","styled","StyledCastItem","StyledCastImg","StyledCastWrapper","StyledCastTitle","StyledCastText","params","useParams","useState","cast","setCast","useEffect","getCast","API","movieID","res","console","log","map","item","src","profile_path","alt","name","character"],"sourceRoot":""}